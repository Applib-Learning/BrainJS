import {GPU} from 'gpu.js';
import {NeuralNetwork,recurrent,FeedForward} from 'brain.js';
export default {
    data: {
        title: "Press Predict Model",
        s1:"",
        l:0,
        z:0
    },
    onInit() {
//        this.title = this.$t('strings.world');
    },
    mnistTrain(){
        const data = require('./../../../../resources/base/media/test.json');
        var net = new NeuralNetwork({hiddenLayers: [784, 392, 196]});
        console.log("Training is started");
        net.train(data, {
            errorThresh: 0.045,
            log: true,
            logPeriod: 1,
            learningRate: 0.1
        });
        console.log("Train Complete");
        const networkState = net.toJSON();
        var s = JSON.stringify(networkState);

        this.s1 = s;
//        console.log(JSON.stringify(networkState));
        var ot = net.run([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.063,0.063,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.004,0.412,0.753,0.749,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.024,0.063,0,0,0,0,0,0.208,0.753,0.992,0.933,0.282,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.588,0.71,0.165,0,0,0,0.369,0.973,0.996,0.827,0.165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247,0.835,0.388,0,0.165,0.471,0.875,0.996,0.914,0.569,0.082,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.49,0.914,0.224,0.612,0.933,0.996,0.992,0.588,0.102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.569,1,0.996,0.996,0.953,0.451,0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.082,0.412,0.812,0.996,0.992,0.749,0.224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.043,0.471,0.957,0.996,0.996,0.937,0.369,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.369,0.894,0.992,0.992,0.914,0.992,0.408,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329,0.996,0.996,0.729,0.043,0.671,0.914,0.165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165,0.894,0.953,0.384,0.043,0.651,0.953,0.141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.588,0.996,0.208,0.208,0.831,0.953,0.247,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.671,0.992,0.651,0.651,0.749,0.388,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.49,0.933,0.894,0.69,0.082,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.043,0.082,0.043,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
        console.log(ot);
        console.log("Start Logging");
    },
    logmodel(){
        let i = this.z;
        var s = this.s1;
        let x = 0;
        while((i<s.length)&&(x<1000)){
            if((i+3000)<s.length){
                console.log(s.substring(i,i+3000));
                i += 3000;
            }
            else{
                console.log(s.substring(i,s.length));
                i += 3000;
            }
            x += 1;
        }
        if(i<s.length){
            this.z = i;
        }
        else{
            console.log("i>s.length");
        }
    },
    predict(){
        console.log("Prediction Started!");
        const data = require('./../../../../resources/base/media/mnist_model.json');
        //        const networkState = JSON.parse(data);
        const net = new NeuralNetwork();
        net.fromJSON(data);
        var ot = net.run([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.369,1,0.424,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.333,0.322,0.035,0,0,0,0,0.792,0.996,0.843,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.251,0.984,0.996,0.435,0,0,0,0.125,0.941,0.996,0.29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.71,0.996,0.635,0.267,0,0,0,0.173,0.996,0.714,0.004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.714,0.976,0.153,0,0,0,0,0.494,0.996,0.675,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.714,0.788,0,0,0,0,0,0.675,0.996,0.337,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.094,0.984,0.788,0,0,0,0.016,0.208,0.937,0.996,0.337,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.412,0.996,0.475,0,0,0.086,0.624,0.996,0.996,0.976,0.184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.475,0.996,0.412,0,0.106,0.733,0.996,0.996,0.996,0.69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.682,0.996,0.412,0.329,0.702,0.996,0.89,0.816,0.996,0.227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.827,0.996,0.886,0.965,0.976,0.796,0.153,0.937,0.996,0.204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.188,0.91,0.996,0.859,0.329,0,0.059,0.996,0.878,0.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325,0.373,0.039,0,0,0.059,0.996,0.824,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.035,0.875,0.812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165,0.996,0.451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.631,0.996,0.451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.078,0.882,0.996,0.302,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192,0.996,0.996,0.075,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.522,0.996,0.675,0.012,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282,0.973,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
        console.log(ot);
        var x = 0;
        var k = 0;
        for(let i=0;i<ot.length;i++){
            if(x<ot[i]){
                k = i;
            }
        }
        this.title = "The number is: " + k;

    }
}



